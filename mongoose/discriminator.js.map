{"version":3,"sources":["mongoose/discriminator.ts"],"names":[],"mappings":"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","file":"discriminator.js","sourcesContent":["import * as _ from 'underscore';\r\nimport { Document, Model as MModel } from 'mongoose';\r\n\r\nimport { A7ModelType } from './a7-model';\r\nimport { ConvertModel } from './types';\r\nimport { DocumentModel, Model, lazyFns, shareFns } from './model';\r\nimport { SBaseMongooseConfig } from './model-config';\r\n\r\nexport class Discriminator extends DocumentModel {\r\n  public static $discriminator<\r\n    T extends ConvertModel<Document, any> & typeof Discriminator,\r\n    M extends typeof Model\r\n  >(\r\n    this: T,\r\n    m: M,\r\n  ): ConvertModel<T & InstanceType<M> & Document, T & InstanceType<M>> & T & M {\r\n    return discriminatorMultiTenancy(this, m);\r\n  }\r\n\r\n  public static $discriminatorA7Model<\r\n    T extends ConvertModel<Document, any> & typeof Discriminator,\r\n    M extends typeof Model\r\n  >(\r\n    this: T,\r\n    m: M,\r\n  ): ConvertModel<T & InstanceType<M> & Document, T & InstanceType<M>> &\r\n    T &\r\n    M &\r\n    A7ModelType {\r\n    return this.$discriminator(m) as any;\r\n  }\r\n}\r\n\r\nfunction discriminatorMultiTenancy<\r\n  T extends ConvertModel<Document, any>,\r\n  M extends typeof Model\r\n>(\r\n  model: T,\r\n  dm: M,\r\n): ConvertModel<T & InstanceType<M> & Document, T & InstanceType<M>> & T & M {\r\n  const sbaseConfig: SBaseMongooseConfig = (model as any).sbaseConfig;\r\n\r\n  if (!sbaseConfig.multiTenancy.enabled) {\r\n    const m = model.discriminator(\r\n      dm.name,\r\n      dm.$mongooseOptions().mongooseSchema,\r\n    ) as any;\r\n\r\n    m.sbaseConfig = sbaseConfig;\r\n\r\n    return m;\r\n  }\r\n\r\n  const tenants = ['default'].concat(sbaseConfig.multiTenancy.tenants);\r\n  const tenantMap: {\r\n    [key: string]: MModel<Document> & T;\r\n  } = {};\r\n\r\n  const currentTenantMap = (model as any)._proxy.$tenantMap;\r\n\r\n  for (const tenancy of tenants) {\r\n    const m = currentTenantMap[tenancy].discriminator(\r\n      dm.name,\r\n      dm.$mongooseOptions(sbaseConfig, tenancy).mongooseSchema,\r\n    );\r\n\r\n    m.sbaseConfig = sbaseConfig;\r\n\r\n    tenantMap[tenancy] = m;\r\n  }\r\n\r\n  const proxy: any = new Proxy<MModel<Document> & T>({} as any, {\r\n    get: (_obj: {}, prop: string) => {\r\n      if (lazyFns.indexOf(prop) >= 0) {\r\n        const ret = function () {\r\n          const t = sbaseConfig.multiTenancy.tenancyFn(prop);\r\n          const m1: any = tenantMap[t];\r\n          const actualFn = m1[prop];\r\n\r\n          return actualFn.apply(this, arguments);\r\n        };\r\n        return ret;\r\n      }\r\n\r\n      if (shareFns.indexOf(prop) >= 0) {\r\n        const ret = () => {\r\n          return _.map(tenants, (t) => {\r\n            const m2: any = tenantMap[t];\r\n            return m2[prop].apply(m2, arguments);\r\n          });\r\n        };\r\n        return ret;\r\n      }\r\n\r\n      const tenancy = sbaseConfig.multiTenancy.tenancyFn(prop);\r\n      const m: any = tenantMap[tenancy];\r\n      m._proxy = proxy;\r\n\r\n      if (prop === '$modelClass') {\r\n        return m;\r\n      }\r\n\r\n      const res = m[prop];\r\n      return _.isFunction(res) ? res.bind(m) : res;\r\n    },\r\n    set: (_obj: {}, prop: string, value: any) => {\r\n      const tenancy = sbaseConfig.multiTenancy.tenancyFn(prop);\r\n      const m: any = tenantMap[tenancy];\r\n      m[prop] = value;\r\n      return true;\r\n    },\r\n  });\r\n\r\n  return proxy;\r\n}\r\n"],"sourceRoot":"D:\\zyq\\ark-db/src"}