{"version":3,"sources":["mongoose/timestamp.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,SAAS,CAAC;AAEjC,oBAAY,kBAAkB,GAAG,OAAO,cAAc,CAAC;AAEvD,qBAQa,cAAe,SAAQ,KAAK,CAAC,KAAK;IAK7C,SAAS,CAAC,EAAE,IAAI,CAAC;IAKjB,cAAc,CAAC,EAAE,IAAI,CAAC;CACvB","file":"timestamp.d.ts","sourcesContent":["import * as model from './model';\r\n\r\nexport type TimestampModelType = typeof TimestampModel;\r\n\r\n@model.Pre({\r\n  name: 'save',\r\n  fn: setLastUpdateTimeOnSave,\r\n})\r\n@model.Pre({\r\n  name: 'findOneAndUpdate',\r\n  fn: setLastUpdateTimeOnUpdate,\r\n})\r\nexport class TimestampModel extends model.Model {\r\n  @model.Field({\r\n    default: Date.now,\r\n    index: true,\r\n  })\r\n  createdAt?: Date;\r\n\r\n  @model.Field({\r\n    index: true,\r\n  })\r\n  lastUpdateTime?: Date;\r\n}\r\n\r\nfunction setLastUpdateTimeOnSave(next: () => void) {\r\n  this.lastUpdateTime = Date.now();\r\n  next();\r\n}\r\n\r\nfunction setLastUpdateTimeOnUpdate(next: () => void) {\r\n  this.update(\r\n    {},\r\n    {\r\n      $set: {\r\n        lastUpdateTime: Date.now(),\r\n      },\r\n      $setOnInsert: {\r\n        createdAt: Date.now(),\r\n      },\r\n    },\r\n  );\r\n  next();\r\n}\r\n"],"sourceRoot":"D:\\zyq\\ark-db/src"}