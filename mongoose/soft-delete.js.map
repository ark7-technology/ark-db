{"version":3,"sources":["mongoose/soft-delete.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iCAAiC;AASjC,IAAa,eAAe,GAA5B,MAAa,eAAgB,SAAQ,KAAK,CAAC,aAAa;IAO/C,KAAK,CAAC,MAAM;QACjB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,OAAO,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;CACF,CAAA;AATC;IAJC,KAAK,CAAC,KAAK,CAAC;QACX,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf,CAAC;;gDACsB;AALb,eAAe;IAL3B,KAAK,CAAC,GAAG,CAAC;QACT,IAAI,EAAE,QAAQ;QACd,EAAE,EAAE,WAAW;KAChB,CAAC;IACD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC;GACrC,eAAe,CAc3B;AAdY,0CAAe;AAgB5B,SAAS,WAAW;IAClB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;QAC5B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;KACvB;IAED,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,KAAK,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;QACvE,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC;KAClC;AACH,CAAC;AAED,SAAS,WAAW,CAAC,IAAyB;IAC5C,IAAI,CAAC,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC,CAAC;AACjE,CAAC","file":"soft-delete.js","sourcesContent":["import * as model from './model';\r\n\r\nexport type SoftDeleteModelType = typeof SoftDeleteModel;\r\n\r\n@model.Pre({\r\n  name: 'remove',\r\n  fn: blockRemove,\r\n})\r\n@model.Pres(model.preQueries, { fn: patchDelete })\r\nexport class SoftDeleteModel extends model.DocumentModel {\r\n  @model.Field({\r\n    type: Boolean,\r\n    default: false,\r\n  })\r\n  public deleted: boolean;\r\n\r\n  public async delete(): Promise<this> {\r\n    if (this.deleted) {\r\n      return this;\r\n    }\r\n    this.deleted = true;\r\n    return await this.save();\r\n  }\r\n}\r\n\r\nfunction patchDelete() {\r\n  if (this._conditions == null) {\r\n    this._conditions = {};\r\n  }\r\n\r\n  if (this._conditions.deleted === undefined && !this.options.withDeleted) {\r\n    this._conditions.deleted = false;\r\n  }\r\n}\r\n\r\nfunction blockRemove(next: (err?: any) => void) {\r\n  next(new Error('remove is not supported, use delete instead'));\r\n}\r\n"],"sourceRoot":"D:\\zyq\\ark-db/src"}