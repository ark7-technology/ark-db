{"version":3,"sources":["mongoose/soft-delete.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,SAAS,CAAC;AAEjC,oBAAY,mBAAmB,GAAG,OAAO,eAAe,CAAC;AAEzD,qBAKa,eAAgB,SAAQ,KAAK,CAAC,aAAa;IAK/C,OAAO,EAAE,OAAO,CAAC;IAEX,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC;CAOrC","file":"soft-delete.d.ts","sourcesContent":["import * as model from './model';\r\n\r\nexport type SoftDeleteModelType = typeof SoftDeleteModel;\r\n\r\n@model.Pre({\r\n  name: 'remove',\r\n  fn: blockRemove,\r\n})\r\n@model.Pres(model.preQueries, { fn: patchDelete })\r\nexport class SoftDeleteModel extends model.DocumentModel {\r\n  @model.Field({\r\n    type: Boolean,\r\n    default: false,\r\n  })\r\n  public deleted: boolean;\r\n\r\n  public async delete(): Promise<this> {\r\n    if (this.deleted) {\r\n      return this;\r\n    }\r\n    this.deleted = true;\r\n    return await this.save();\r\n  }\r\n}\r\n\r\nfunction patchDelete() {\r\n  if (this._conditions == null) {\r\n    this._conditions = {};\r\n  }\r\n\r\n  if (this._conditions.deleted === undefined && !this.options.withDeleted) {\r\n    this._conditions.deleted = false;\r\n  }\r\n}\r\n\r\nfunction blockRemove(next: (err?: any) => void) {\r\n  next(new Error('remove is not supported, use delete instead'));\r\n}\r\n"],"sourceRoot":"D:\\zyq\\ark-db/src"}